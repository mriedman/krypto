{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","N0","N1","Kr","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nVals","i","j","Math","floor","random","indexOf","push","state","lines","nValsA","nValsR","win","v1","v2","num","_this2","react_default","a","createElement","src_Line","onClick","evt","handlePress","key","toString","line","prev","l1","split","numL","opL","parL","length","setState","t0","tokens","className","parseInt","t2","parseLine2","dig","arguments","undefined","f","n","i2","t1","slice","i1","i3","concat","parseFloat","min","round","pow","l2","parseLine","value","id","_this3","Nums","v3","map","renderLine","apply","Win","React","Component","classDet","f2","Line","_this4","iVal","target","_this5","type","onChange","updIVal","ReactDOM","render","src_Kr","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.549a89e6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nvar N0 = 6;\nvar N1 = 25;\n\nclass Kr extends React.Component{\n  constructor(props){\n    super(props);\n    let nVals=[];\n    for(let i=0;i<N0;i++){\n      let j=Math.floor(Math.random()*(N1-1)+1)\n      nVals.indexOf(j)>-1 ? i-- : nVals.push(j)\n    }\n    this.state={nVals:nVals,lines:[['',' = 0',0]],nValsA:[],nValsR:[],win:false};\n  }\n  renderLine(v1,v2,num){\n    return (\n      <Line \n        onClick={evt => this.handlePress(num,evt)} \n        v1={v1} v2={v2} num={num} key={num.toString()}\n      />\n    );\n  }\n  parseLine(line,prev){\n    let l1=line.split('')\n    let numL=['0','1','2','3','4','5','6','7','8','9']\n    let opL=['+','-','/','*']\n    let parL=['(',')']\n    if(l1.length===0){\n      this.setState({nValsR:[]})\n      return ' = 0'\n    }\n    if(opL.indexOf(l1[l1.length-1])>-1) return prev\n    let t0=''\n    let tokens=[]\n    for(let i=0;i<l1.length;i++){\n      if(\n        numL.indexOf(l1[i])===-1&&\n        opL.indexOf(l1[i])===-1&&\n        parL.indexOf(l1[i])===-1) return <span className='red'>ERROR</span>\n      if(numL.indexOf(l1[i])>-1) t0+=l1[i]\n      if(opL.indexOf(l1[i])>-1){\n        if(t0!==''){\n          tokens.push(parseInt(t0))\n          tokens.push(l1[i])\n          t0=''\n        }\n        else{\n          if(i!==0&&l1[i-1]===')') tokens.push(l1[i])\n          else return <span className='red'>ERROR</span>;\n        }\n      }\n      if(parL.indexOf(l1[i])>-1){\n        if(t0!=='') tokens.push(parseInt(t0))\n        tokens.push(l1[i])\n        t0=''\n      }\n    }\n    if(t0!=='') tokens.push(parseInt(t0))\n    let t2=[]\n    for(let i=0;i<tokens.length;i++){\n      if(parL.indexOf(tokens[i])===-1&&opL.indexOf(tokens[i])===-1) t2.push(tokens[i])\n    }\n    this.setState({nValsR:t2});\n    return this.parseLine2(tokens,prev,3,t2);\n  }\n  parseLine2(tokens,prev,dig=10,t2=[]){\n    let f=n=>n>-1?n:1000\n    let i2=100;\n    while(tokens.length>1&&i2>0){\n      let t1=tokens.slice()\n      i2--\n      let i1=t1.indexOf('(')\n      if(i1>-1){\n        if(i1>t1.indexOf(')')) return prev\n        let i3=0\n        for(let i=i1;i<t1.length;i++){\n          if(t1[i]==='(') i3++\n          if(t1[i]===')') i3--\n          if(i3===0){\n            i3=i;\n            break\n          }\n          if(i===t1.length-1) return prev\n        }\n        tokens= (\n          t1.slice(0,i1).\n          concat([parseFloat(this.parseLine2(t1.slice(i1+1,i3)).slice(3))]).\n          concat(t1.slice(i3+1)) \n          );\n        continue\n      }\n      i1=Math.min(f(tokens.indexOf('*')),f(tokens.indexOf('/')))\n      if(i1<1000){\n        if(t1[i1]==='*'){\n          tokens=t1.slice(0,i1-1).concat([t1[i1-1]*t1[i1+1]]).concat(t1.slice(i1+2))\n        }else{\n          tokens=t1.slice(0,i1-1).concat([t1[i1-1]/t1[i1+1]]).concat(t1.slice(i1+2))\n        }\n        continue;\n      }\n      i1=Math.min(f(tokens.indexOf('+')),f(tokens.indexOf('-')))\n      if(i1<1000){\n        if(t1[i1]==='+'){\n          tokens=t1.slice(0,i1-1).concat([t1[i1-1]+t1[i1+1]]).concat(t1.slice(i1+2))\n        }else{\n          tokens=t1.slice(0,i1-1).concat([t1[i1-1]-t1[i1+1]]).concat(t1.slice(i1+2))\n        }\n      }\n    }\n    if(dig!==10&&(Math.round(tokens[0]*10**5)/10**5)===this.state.nVals[N0-1]){\n      if(this.state.nValsR.length===N0-1){\n        for(let i=0;i<N0-1;i++){\n          if(t2.indexOf(this.state.nVals[i])===-1) break\n          if(i===N0-2) this.setState({win:true})\n        }\n      }\n    }\n    return ' = '+Math.round(tokens[0]*10**dig)/10**dig\n  }\n  handlePress(num,evt){\n    let l2=this.state.lines.slice()\n    let a=this.parseLine(evt.value,l2[num][1])\n    l2[num]=[evt.value,a,parseInt(evt.id.slice(0,-4))];\n    this.setState({lines:l2});\n  }\n  render(){\n    return (\n      <div id='game'>\n        <Nums value={this.state.nVals} v2={this.state.nValsA} v3={this.state.nValsR} />\n        {this.state.lines.map(props => this.renderLine.apply(this,props))}\n        <Win value={this.state.win} />\n      </div>\n    );\n  }\n}\n\nfunction Nums(props){\n  function classDet(num){\n    if(props.v3.indexOf(num)>-1) return 'gray';\n    return 'black';\n  }\n  function f2(num){\n    switch(props.value.indexOf(num)){\n      case N0-2: return ' = ';\n      case N0-1: return '';\n      default: return ', ';\n    }\n  }\n  return (\n    <p id='nVals' >{props.value.map(num => (\n      <span className={classDet(num)} key={num.toString()}>\n        {num.toString()+f2(num)}\n      </span>))}\n     </p>\n  );\n}\n\nclass Line extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={iVal:props.v1};\n  }\n  updIVal(evt){\n    this.props.onClick(evt.target)\n  }\n  render(){\n    return (\n      <div className='line'>\n        <input type='text' \n          onChange={evt => this.updIVal(evt)} \n          value={this.state.v1} \n          id={this.props.num.toString()+'Line'}\n        />\n        <span>{this.props.v2}</span>\n      </div>\n    );\n  }\n}\nfunction Win(props){\n  if(!props.value) return <p/>\n  return <p>You Win!!!!!!</p>\n}\n\nReactDOM.render(<Kr />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n//Line 200!"],"sourceRoot":""}